---
globs: *.scss,*.tsx,*.jsx
---

# 移动端适配严格规则

## 📱 微信小程序移动端适配要求

### 🎯 尺寸单位规范

#### ✅ 必须使用 rpx 单位
```scss
.component {
  width: 200rpx;          // ✅ 正确
  height: 48rpx;          // ✅ 正确
  padding: 16rpx 24rpx;   // ✅ 正确
  margin: 12rpx 0;        // ✅ 正确
  font-size: 28rpx;       // ✅ 正确
  border-radius: 8rpx;    // ✅ 正确
}
```

#### ❌ 禁止使用其他单位
```scss
.component {
  width: 100px;           // ❌ 禁止使用px
  height: 2rem;           // ❌ 禁止使用rem
  padding: 8px 12px;      // ❌ 禁止使用px
  font-size: 14px;        // ❌ 禁止使用px
  margin: 0.5em;          // ❌ 禁止使用em
}
```

### 🖱️ 触摸目标规范

#### 最小触摸目标：48rpx × 48rpx
```scss
.touch-element {
  min-width: 48rpx;       // ✅ 最小宽度
  min-height: 48rpx;      // ✅ 最小高度
  
  // 对于小图标，增加padding确保触摸区域
  .small-icon {
    width: 24rpx;
    height: 24rpx;
    padding: 12rpx;       // 确保总触摸区域48rpx
  }
}
```

### 🛡️ 安全区域适配

#### 使用 NutUI SafeArea 组件
```typescript
import { SafeArea } from '@nutui/nutui-react-taro'

// ✅ 正确的安全区域处理
const MobileLayout = ({ children }) => (
  <View className="mobile-layout">
    <SafeArea position="top" />
    <View className="content">
      {children}
    </View>
    <SafeArea position="bottom" />
  </View>
)
```

#### CSS 安全区域变量
```scss
.fixed-header {
  top: constant(safe-area-inset-top);
  top: env(safe-area-inset-top);
}

.fixed-footer {
  bottom: constant(safe-area-inset-bottom);
  bottom: env(safe-area-inset-bottom);
}
```

### 📊 表格横向滚动优化

```scss
.data-table {
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  
  &__container {
    min-width: 100%;
    width: max-content;        // 允许内容超出容器
  }
  
  &__header {
    position: sticky;
    top: 0;
    background: #fff;
    z-index: 10;
  }
  
  &__cell {
    min-width: 120rpx;         // 最小列宽
    white-space: nowrap;       // 禁止换行
    
    &--important {
      min-width: 200rpx;       // 重要列更宽
      position: sticky;        // 固定重要列
      left: 0;
      background: #fff;
      z-index: 5;
    }
  }
}
```

### 🎨 移动端优化样式

```scss
.mobile-optimized {
  // 硬件加速
  transform: translateZ(0);
  will-change: transform;
  
  // 触摸优化
  touch-action: manipulation;
  -webkit-tap-highlight-color: transparent;
  
  // 用户选择控制
  -webkit-user-select: none;
  user-select: none;
  
  // 滚动优化
  -webkit-overflow-scrolling: touch;
  overscroll-behavior-y: none;
  
  // 防止iOS缩放
  input, textarea {
    font-size: 16px !important;
  }
  
  // 触摸反馈
  &:active {
    transform: scale(0.98);
    background-color: rgba(0, 0, 0, 0.05);
    transition: all 0.2s ease;
  }
}
```

### 📐 响应式断点

```scss
// 小屏设备 (iPhone SE 等)
@media (max-width: 375px) {
  .component {
    font-size: 24rpx;        // 缩小字体
    padding: 12rpx;          // 减少内边距
  }
}

// 中屏设备 (iPhone 6-8 Plus)
@media (min-width: 376px) and (max-width: 414px) {
  .component {
    font-size: 28rpx;        // 标准字体
    padding: 16rpx;          // 标准内边距
  }
}

// 横屏适配
@media (orientation: landscape) and (max-height: 500px) {
  .component {
    font-size: 24rpx;        // 横屏时缩小
    .landscape-hide {
      display: none;         // 横屏隐藏非必要元素
    }
  }
}
```

### 🚀 性能优化

```scss
.performance-optimized {
  // 避免重绘
  contain: layout style paint;
  content-visibility: auto;
  
  // 长列表优化
  .virtual-item {
    contain: layout style paint;
    will-change: transform;
  }
  
  // 图片优化
  img {
    content-visibility: auto;
    loading: lazy;
  }
}
```

## 🔧 TypeScript 移动端适配

```typescript
// 响应式Hook示例
const useResponsive = () => {
  const [screenInfo, setScreenInfo] = useState<ScreenInfo>()
  
  useEffect(() => {
    Taro.getSystemInfo({
      success: (res) => {
        setScreenInfo({
          windowWidth: res.windowWidth,
          windowHeight: res.windowHeight,
          pixelRatio: res.pixelRatio,
          safeArea: res.safeArea,
        })
      }
    })
  }, [])
  
  return screenInfo
}

// 移动端事件处理
const handleTouchStart = (e: ITouchEvent) => {
  // 处理触摸开始
}

const handleTouchMove = (e: ITouchEvent) => {
  // 处理触摸移动
}
```

## ⚠️ 移动端适配检查清单

开发时必须确认：
- [ ] 所有尺寸使用rpx单位
- [ ] 触摸目标不小于48rpx×48rpx
- [ ] 使用SafeArea处理安全区域
- [ ] 表格支持横向滚动
- [ ] 添加触摸反馈效果
- [ ] 防止iOS Safari缩放
- [ ] 优化滚动性能
- [ ] 考虑横屏适配

**移动端适配是项目的核心要求，忽略这些规范将导致用户体验极差！**
