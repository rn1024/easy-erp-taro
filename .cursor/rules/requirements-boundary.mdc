---
alwaysApply: true
---

# 需求边界严格控制规则

## 🎯 需求范围严格约束

### 📋 功能边界锁定原则

基于思维导图的功能说明书：[ADMIN_MINIAPP_PRD.md](mdc:docs/ADMIN_MINIAPP_PRD.md)

#### ✅ 严格按照PRD执行
```typescript
// ✅ 只实现PRD中明确列出的功能
const allowedFeatures = [
  '登录功能',
  '扫描功能', 
  'SKU搜索',
  '成品库存管理',
  '散件库存管理', 
  '包装任务管理',
  '发货任务管理',
  '产品列表查看'
]

// ✅ 只实现明确要求的操作
const allowedOperations = {
  inventory: ['新增', '编辑', '删除'],  // 库存管理
  tasks: ['状态更新'],                // 任务管理  
  products: ['查看', '搜索', '筛选']   // 产品管理（只读）
}
```

#### ❌ 严格禁止的功能扩展
```typescript
// ❌ 禁止添加PRD中没有的功能
const forbiddenFeatures = [
  '用户注册',           // ❌ PRD中只有登录
  '密码重置',           // ❌ PRD中没有提及
  '数据导出',           // ❌ PRD中没有要求
  '批量操作',           // ❌ PRD中没有明确要求
  '数据统计图表',       // ❌ PRD中没有涉及
  '消息推送',           // ❌ PRD中没有提及
  '工作流设计器',       // ❌ 超出PRD范围
  '权限管理界面',       // ❌ PRD中没有要求
  '系统设置',           // ❌ PRD中没有涉及
  '操作日志',           // ❌ PRD中没有提及
]

// ❌ 禁止添加PRD中没有的操作
const forbiddenOperations = {
  products: ['新增', '编辑', '删除'],  // ❌ 产品管理只能查看
  users: ['管理'],                    // ❌ 没有用户管理功能
  system: ['配置'],                   // ❌ 没有系统配置功能
}
```

### 🔒 严格按照字段实现

#### ✅ 成品库存字段（PRD明确规定）
```typescript
interface FinishedInventory {
  shop: string          // ✅ 店铺
  category: string      // ✅ 产品分类  
  productName: string   // ✅ 产品昵称
  outerSize: string     // ✅ 外箱尺寸
  cartonQty: number     // ✅ 装箱数量
  weight: number        // ✅ 重量
  location: string      // ✅ 货位
  quantity: number      // ✅ 库存数量
}
```

#### ❌ 禁止自行添加字段
```typescript
// ❌ 禁止添加PRD中没有的字段
interface FinishedInventoryWrong {
  // PRD明确字段
  shop: string
  category: string
  // ...
  
  // ❌ 以下字段PRD中没有，禁止添加
  createdAt?: string        // ❌ 创建时间
  updatedAt?: string        // ❌ 更新时间
  operator?: string         // ❌ 操作员
  status?: string           // ❌ 状态
  remark?: string           // ❌ 备注
  images?: string[]         // ❌ 图片
  tags?: string[]           // ❌ 标签
  supplier?: string         // ❌ 供应商
}
```

### 🚫 禁止过度优化

#### ❌ 禁止的"优化"行为
```typescript
// ❌ 禁止添加PRD中没有要求的优化
const forbiddenOptimizations = [
  '添加缓存机制',         // ❌ PRD没有要求
  '添加离线支持',         // ❌ PRD没有要求  
  '添加数据同步',         // ❌ PRD没有要求
  '添加实时更新',         // ❌ PRD没有要求
  '添加撤销/重做',        // ❌ PRD没有要求
  '添加快捷键',           // ❌ PRD没有要求
  '添加主题切换',         // ❌ PRD没有要求
  '添加国际化',           // ❌ PRD没有要求
]

// ❌ 禁止自作主张的UI优化
const forbiddenUIOptimizations = [
  '美化登录页面',         // ❌ 按PRD要求实现即可
  '添加动画效果',         // ❌ PRD没有要求
  '优化loading样式',      // ❌ 使用标准组件即可
  '自定义表格样式',       // ❌ 使用NutUI标准样式
  '添加空状态插画',       // ❌ PRD没有要求
]
```

## 🔄 复制优先原则

### ✅ 正确的开发流程
```typescript
// 1. 查找现有类似功能
const existingComponents = [
  'TaskCard',      // 可复用于库存卡片
  'SearchBar',     // 可复用于产品搜索
  'MobileLayout',  // 必须复用于所有页面
]

// 2. 复制现有代码
// 从 TaskCard 复制基础结构
// 从 SearchBar 复制搜索逻辑  
// 从 MobileLayout 复制布局

// 3. 最小化修改适配
// 只修改必要的字段和样式
// 保持原有代码结构和命名
```

#### ❌ 禁止从零开始写
```typescript
// ❌ 禁止：从零开始实现已有功能
const createNewComponent = () => {
  // 完全重新设计组件结构
  // 重新写样式
  // 重新实现逻辑
}

// ✅ 正确：复制现有组件再修改
const createByReuse = () => {
  // 复制现有组件代码
  // 修改必要的差异部分
  // 保持整体结构一致
}
```

## 📐 设计稿复刻约束

### 🎨 严格按原样实现

#### ✅ 完全复刻原则
- **代码结构**: 严格按照原有组件的代码结构
- **命名方式**: 严格按照原有组件的命名规范
- **CSS样式**: 严格按照原有组件的样式实现
- **布局方式**: 严格按照原有组件的布局逻辑

#### ❌ 严格禁止的"改进"
```typescript
// ❌ 禁止的自作主张行为
const forbiddenImprovements = [
  '优化代码结构',        // ❌ 必须保持原有结构
  '改进命名规范',        // ❌ 必须使用原有命名  
  '美化UI设计',          // ❌ 必须完全复刻
  '重构实现逻辑',        // ❌ 必须保持原有逻辑
  '调整布局方式',        // ❌ 必须保持原有布局
  '修改交互方式',        // ❌ 必须保持原有交互
]
```

## 💬 需求确认机制

### 🔍 开发前必须确认

在开始实现任何功能前，必须确认：
- [ ] 功能是否在PRD的明确列表中？
- [ ] 字段是否在PRD的明确定义中？
- [ ] 操作是否在PRD的明确要求中？
- [ ] 是否有现有代码可以复用？
- [ ] 复制的代码需要哪些最小修改？

### ⚠️ 疑问处理流程

当遇到PRD中不明确的情况：
1. **停止实现** - 不要猜测需求
2. **明确提问** - 向用户确认具体要求
3. **等待确认** - 得到明确答复后再继续
4. **严格执行** - 按确认的要求实现

### 🚨 违规处理

如果发现实现了PRD范围外的功能：
1. **立即停止** - 停止当前实现
2. **回滚代码** - 删除多余功能
3. **重新对焦** - 回到PRD要求的范围
4. **严格执行** - 只实现明确要求的功能

## 📋 需求边界检查清单

每个功能实现前检查：
- [ ] 功能在PRD明确列表中
- [ ] 字段在PRD明确定义中  
- [ ] 操作在PRD明确要求中
- [ ] 没有添加额外的"优化"
- [ ] 复用了现有代码结构
- [ ] 保持了原有设计风格

**需求边界是项目成功的关键，超出边界将导致偏离目标和浪费资源！**
